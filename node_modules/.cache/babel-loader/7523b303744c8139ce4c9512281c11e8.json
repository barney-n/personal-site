{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/programming/personal-site/src/pages/AllPosts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport dbstring from \"../constants.js\";\nimport LoadingIcon from \"../elements/LoadingIcon.js\";\nimport \"../styles/AllPostsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nexport default function AllPostsPage() {\n  _s();\n\n  const history = useHistory();\n  const [posts, setPosts] = React.useState([]);\n  const [tag, setTag] = React.useState(\"all\");\n  const [tags, setTags] = React.useState([]);\n  React.useEffect(() => {\n    fetch(dbstring + \"/posts\").then(res => res.json()).then(data => {\n      setPosts(data.posts.reverse());\n    });\n  }, []);\n  React.useEffect(() => {\n    fetch(dbstring + \"/tags\").then(res => res.json()).then(data => data.alltags).then(data => {\n      data.splice(0, 0, \"all\");\n      return data;\n    }).then(data => {\n      setTags(data);\n      console.log(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reactWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: posts.length == 0 ? /*#__PURE__*/_jsxDEV(LoadingIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-tagselect\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"select-tagselect\",\n            onChange: e => setTag(e.target.value.toLowerCase()),\n            children: tags.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n              children: t[0].toUpperCase() + t.substring(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: posts.filter(p => {\n            if (tag === \"all\") {\n              return p;\n            } else {\n              return p.tags.includes(tag);\n            }\n          }).map(p => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"list-item\",\n                to: `/post/${p.id}`,\n                children: p.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllPostsPage, \"1a6DIZjnOWT7IgmeQMqZyD3GbwA=\", false, function () {\n  return [useHistory];\n});\n\n_c = AllPostsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPostsPage\");","map":{"version":3,"sources":["/Users/barnabynapier/Documents/programming/personal-site/src/pages/AllPosts.js"],"names":["React","useHistory","Link","CustomNavbar","dbstring","LoadingIcon","require","config","AllPostsPage","history","posts","setPosts","useState","tag","setTag","tags","setTags","useEffect","fetch","then","res","json","data","reverse","alltags","splice","console","log","length","e","target","value","toLowerCase","map","t","toUpperCase","substring","filter","p","includes","id","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport dbstring from \"../constants.js\";\nimport LoadingIcon from \"../elements/LoadingIcon.js\";\nimport \"../styles/AllPostsPage.css\";\nrequire(\"dotenv\").config();\n\nexport default function AllPostsPage() {\n  const history = useHistory();\n\n  const [posts, setPosts] = React.useState([]);\n  const [tag, setTag] = React.useState(\"all\");\n  const [tags, setTags] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(dbstring + \"/posts\")\n      .then((res) => res.json())\n      .then((data) => {\n        setPosts(data.posts.reverse());\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetch(dbstring + \"/tags\")\n      .then((res) => res.json())\n      .then((data) => data.alltags)\n      .then((data) => {\n        data.splice(0, 0, \"all\");\n        return data;\n      })\n      .then((data) => {\n        setTags(data);\n        console.log(data);\n      });\n  }, []);\n\n  return (\n    <div className=\"reactWrapper\">\n      <CustomNavbar />\n      <div className=\"content\">\n        {posts.length == 0 ? (\n          <LoadingIcon />\n        ) : (\n          <div>\n            <form className=\"form-tagselect\">\n              <select\n                className=\"select-tagselect\"\n                onChange={(e) => setTag(e.target.value.toLowerCase())}\n              >\n                {tags.map((t) => (\n                  <option>{t[0].toUpperCase() + t.substring(1)}</option>\n                ))}\n              </select>\n            </form>\n            <ul>\n              {posts\n                .filter((p) => {\n                  if (tag === \"all\") {\n                    return p;\n                  } else {\n                    return p.tags.includes(tag);\n                  }\n                })\n                .map((p) => {\n                  return (\n                    <li>\n                      <Link className=\"list-item\" to={`/post/${p.id}`}>\n                        {p.title}\n                      </Link>\n                    </li>\n                  );\n                })}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}