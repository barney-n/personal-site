{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/programming/personal-site/src/pages/AdminCreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport dbstring from \"../constants.js\";\nimport \"../styles/AdminCreatePost.css\"; // CKEditor imports\n\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nexport default function AdminCreatePost() {\n  _s();\n\n  const history = useHistory();\n  const token = localStorage.getItem(\"token\");\n  const [title, setTitle] = React.useState(\"\");\n  const [date, setDate] = React.useState(\"\");\n  const [content, setContent] = React.useState(\"\");\n  const [tags, setTags] = React.useState([]);\n  const [tagslist, setTagslist] = React.useState([]);\n  const [currentAdmin, setCurrentAdmin] = React.useState(\"\");\n  React.useEffect(() => {\n    // If logged in: Get username\n    if (token) {\n      fetch(dbstring + \"/get-current-admin\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(u => {\n        setCurrentAdmin(u[\"name\"]);\n      });\n    } //  If not logged in, redirect to login page\n    else {\n      history.push(\"/admin-login\");\n    }\n  }, [token]); // Render all tags for the author to see\n\n  React.useEffect(() => {\n    fetch(dbstring + \"/tags\").then(res => res.json()).then(data => data.alltags).then(data => {\n      setTagslist(data);\n    });\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(dbstring + \"/newpost\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        date,\n        currentAdmin,\n        tags,\n        content\n      })\n    }).then(res => res.json()).then(history.push(\"/posts\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reactWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"Title\",\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"date\",\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"Author\",\n          value: currentAdmin,\n          readOnly: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"Tags\",\n          onChange: e => setTags(e.target.value.split(\",\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"alltags-list\",\n          children: [\"(\", tagslist.join(\", \"), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\",\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CKEditor, {\n            editor: ClassicEditor,\n            data: content,\n            onChange: (event, editor) => {\n              const data = editor.getData();\n              setContent(data);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: () => {\n          localStorage.removeItem(\"token\");\n          history.push(\"/posts\");\n        },\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminCreatePost, \"Kexvl9D829339WdMN13WsNt/v6k=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminCreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminCreatePost\");","map":{"version":3,"sources":["/Users/barnabynapier/Documents/programming/personal-site/src/pages/AdminCreatePost.js"],"names":["React","useHistory","CustomNavbar","dbstring","CKEditor","ClassicEditor","require","config","AdminCreatePost","history","token","localStorage","getItem","title","setTitle","useState","date","setDate","content","setContent","tags","setTags","tagslist","setTagslist","currentAdmin","setCurrentAdmin","useEffect","fetch","headers","Authorization","then","res","json","u","push","data","alltags","handleSubmit","e","preventDefault","method","body","JSON","stringify","target","value","split","join","marginTop","marginBottom","event","editor","getData","removeItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport dbstring from \"../constants.js\";\nimport \"../styles/AdminCreatePost.css\";\n\n// CKEditor imports\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nrequire(\"dotenv\").config();\n\nexport default function AdminCreatePost() {\n  const history = useHistory();\n  const token = localStorage.getItem(\"token\");\n\n  const [title, setTitle] = React.useState(\"\");\n  const [date, setDate] = React.useState(\"\");\n  const [content, setContent] = React.useState(\"\");\n  const [tags, setTags] = React.useState([]);\n  const [tagslist, setTagslist] = React.useState([]);\n  const [currentAdmin, setCurrentAdmin] = React.useState(\"\");\n\n  React.useEffect(() => {\n    // If logged in: Get username\n    if (token) {\n      fetch(dbstring + \"/get-current-admin\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n        .then((res) => res.json())\n        .then((u) => {\n          setCurrentAdmin(u[\"name\"]);\n        });\n    }\n    //  If not logged in, redirect to login page\n    else {\n      history.push(\"/admin-login\");\n    }\n  }, [token]);\n\n  // Render all tags for the author to see\n  React.useEffect(() => {\n    fetch(dbstring + \"/tags\")\n      .then((res) => res.json())\n      .then((data) => data.alltags)\n      .then((data) => {\n        setTagslist(data);\n      });\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    fetch(dbstring + \"/newpost\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title,\n        date,\n        currentAdmin,\n        tags,\n        content,\n      }),\n    })\n      .then((res) => res.json())\n      .then(history.push(\"/posts\"));\n  }\n\n  return (\n    <div className=\"reactWrapper\">\n      <CustomNavbar />\n      <div className=\"content\">\n        <form onSubmit={handleSubmit}>\n          <input\n            className=\"input\"\n            placeholder=\"Title\"\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <br />\n          <input\n            className=\"input\"\n            type=\"date\"\n            onChange={(e) => setDate(e.target.value)}\n          />\n          <br />\n          <input\n            className=\"input\"\n            placeholder=\"Author\"\n            value={currentAdmin}\n            readOnly=\"true\"\n          />\n          <br />\n          <input\n            className=\"input\"\n            placeholder=\"Tags\"\n            onChange={(e) => setTags(e.target.value.split(\",\"))}\n          />\n          <span className=\"alltags-list\">({tagslist.join(\", \")})</span>\n          <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n            <CKEditor\n              editor={ClassicEditor}\n              data={content}\n              onChange={(event, editor) => {\n                const data = editor.getData();\n                setContent(data);\n              }}\n            />\n          </div>\n          <button type=\"submit\">Post</button>\n        </form>\n        <button\n          className=\"logout-button\"\n          onClick={() => {\n            localStorage.removeItem(\"token\");\n            history.push(\"/posts\");\n          }}\n        >\n          Log out\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}