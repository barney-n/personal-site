{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/programming/personal-site/src/pages/AdminEditPost.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport dbstring from \"../constants.js\";\nimport \"../styles/AdminEditPost.css\"; // CKEditor imports\n\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nexport default function AdminEditPost() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const token = localStorage.getItem(\"token\");\n  const [post, setPost] = React.useState();\n  const [title, setTitle] = React.useState(\"\");\n  const [date, setDate] = React.useState(\"\");\n  const [content, setContent] = React.useState(\"\");\n  const [tags, setTags] = React.useState([]);\n  const [tagslist, setTagslist] = React.useState([]);\n  const [currentAdmin, setCurrentAdmin] = React.useState(\"\");\n  React.useEffect(() => {\n    // If logged in: Get username\n    if (token) {\n      fetch(dbstring + \"/get-current-admin\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(u => {\n        setCurrentAdmin(u[\"name\"]);\n      });\n    } //  If not logged in, redirect to login page\n    else {\n      history.push(\"/admin-login\");\n    }\n  }, [token]);\n  React.useEffect(() => {\n    fetch(dbstring + `/post/${id}`).then(res => res.json()).then(p => {\n      setPost(p);\n      setTitle(p.title);\n      setDate(p.date);\n      setContent(p.content);\n      setTags(p.tags);\n    });\n  }, []); // Render all tags for the author to see\n\n  React.useEffect(() => {\n    fetch(dbstring + \"/tags\").then(res => res.json()).then(data => data.alltags).then(data => {\n      setTagslist(data);\n    });\n  }, []);\n\n  function deletePost(e) {\n    e.preventDefault();\n    fetch(dbstring + `/deletepost/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        date,\n        currentAdmin,\n        tags,\n        content,\n        id\n      })\n    }).then(res => res.json()).then(history.push(\"/admin\"));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(dbstring + `/editpost/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        date,\n        currentAdmin,\n        tags,\n        content,\n        id\n      })\n    }).then(res => res.json()).then(history.push(\"/admin\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reactWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"Author\",\n          value: currentAdmin,\n          readOnly: \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: tags.join(\",\"),\n          onChange: e => setTags(e.target.value.split(\",\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"alltags-list\",\n          children: [\"(\", tagslist.join(\", \"), \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"20px\",\n            marginBottom: \"20px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(CKEditor, {\n            editor: ClassicEditor,\n            data: content,\n            onChange: (event, editor) => {\n              const data = editor.getData();\n              setContent(data);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: () => {\n          localStorage.removeItem(\"token\");\n          history.push(\"/posts\");\n        },\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: deletePost,\n        children: \"Delete Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminEditPost, \"Rt9ZEp/fsVbLl6mWwCY52LvOqSc=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AdminEditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminEditPost\");","map":{"version":3,"sources":["/Users/barnabynapier/Documents/programming/personal-site/src/pages/AdminEditPost.js"],"names":["React","useHistory","Link","useParams","CustomNavbar","dbstring","CKEditor","ClassicEditor","require","config","AdminEditPost","id","history","token","localStorage","getItem","post","setPost","useState","title","setTitle","date","setDate","content","setContent","tags","setTags","tagslist","setTagslist","currentAdmin","setCurrentAdmin","useEffect","fetch","headers","Authorization","then","res","json","u","push","p","data","alltags","deletePost","e","preventDefault","method","body","JSON","stringify","handleSubmit","target","value","join","split","marginTop","marginBottom","event","editor","getData","removeItem"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory, Link, useParams } from \"react-router-dom\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport dbstring from \"../constants.js\";\nimport \"../styles/AdminEditPost.css\";\n\n// CKEditor imports\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nrequire(\"dotenv\").config();\n\nexport default function AdminEditPost() {\n  const { id } = useParams();\n  const history = useHistory();\n  const token = localStorage.getItem(\"token\");\n\n  const [post, setPost] = React.useState();\n  const [title, setTitle] = React.useState(\"\");\n  const [date, setDate] = React.useState(\"\");\n  const [content, setContent] = React.useState(\"\");\n  const [tags, setTags] = React.useState([]);\n  const [tagslist, setTagslist] = React.useState([]);\n  const [currentAdmin, setCurrentAdmin] = React.useState(\"\");\n\n  React.useEffect(() => {\n    // If logged in: Get username\n    if (token) {\n      fetch(dbstring + \"/get-current-admin\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n        .then((res) => res.json())\n        .then((u) => {\n          setCurrentAdmin(u[\"name\"]);\n        });\n    }\n    //  If not logged in, redirect to login page\n    else {\n      history.push(\"/admin-login\");\n    }\n  }, [token]);\n\n  React.useEffect(() => {\n    fetch(dbstring + `/post/${id}`)\n      .then((res) => res.json())\n      .then((p) => {\n        setPost(p);\n        setTitle(p.title);\n        setDate(p.date);\n        setContent(p.content);\n        setTags(p.tags);\n      });\n  }, []);\n\n  // Render all tags for the author to see\n  React.useEffect(() => {\n    fetch(dbstring + \"/tags\")\n      .then((res) => res.json())\n      .then((data) => data.alltags)\n      .then((data) => {\n        setTagslist(data);\n      });\n  }, []);\n\n  function deletePost(e) {\n    e.preventDefault();\n\n    fetch(dbstring + `/deletepost/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title,\n        date,\n        currentAdmin,\n        tags,\n        content,\n        id,\n      }),\n    })\n      .then((res) => res.json())\n      .then(history.push(\"/admin\"));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    fetch(dbstring + `/editpost/${id}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        title,\n        date,\n        currentAdmin,\n        tags,\n        content,\n        id,\n      }),\n    })\n      .then((res) => res.json())\n      .then(history.push(\"/admin\"));\n  }\n\n  return (\n    <div className=\"reactWrapper\">\n      <CustomNavbar />\n      <div className=\"content\">\n        <form onSubmit={handleSubmit}>\n          <input\n            className=\"input\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <br />\n          <input\n            className=\"input\"\n            type=\"date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n          />\n          <br />\n          <input\n            className=\"input\"\n            placeholder=\"Author\"\n            value={currentAdmin}\n            readOnly=\"true\"\n          />\n          <br />\n          <input\n            className=\"input\"\n            value={tags.join(\",\")}\n            onChange={(e) => setTags(e.target.value.split(\",\"))}\n          />\n          <span className=\"alltags-list\">({tagslist.join(\", \")})</span>\n          <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n            <CKEditor\n              editor={ClassicEditor}\n              data={content}\n              onChange={(event, editor) => {\n                const data = editor.getData();\n                setContent(data);\n              }}\n            />\n          </div>\n          <button type=\"submit\">Update</button>\n        </form>\n        <button\n          className=\"logout-button\"\n          onClick={() => {\n            localStorage.removeItem(\"token\");\n            history.push(\"/posts\");\n          }}\n        >\n          Log out\n        </button>\n        <button className=\"logout-button\" onClick={deletePost}>\n          Delete Post\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}