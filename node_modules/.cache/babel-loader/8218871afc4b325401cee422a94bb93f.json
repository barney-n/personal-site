{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/programming/personal-site/src/pages/AdminHome.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport dbstring from \"../constants.js\";\nimport \"../styles/AdminHome.css\"; // CKEditor imports\n\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nexport default function AdminHome() {\n  _s();\n\n  const history = useHistory();\n  const token = localStorage.getItem(\"token\");\n  const [posts, setPosts] = React.useState([]);\n  const [currentAdmin, setCurrentAdmin] = React.useState(\"\");\n  React.useEffect(() => {\n    // If logged in: Get username\n    if (token) {\n      fetch(dbstring + \"/get-current-admin\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => res.json()).then(u => {\n        setCurrentAdmin(u[\"name\"]);\n      });\n    } //  If not logged in, redirect to login page\n    else {\n      history.push(\"/admin-login\");\n    }\n  }, [token]); // Get all posts\n\n  React.useEffect(() => {\n    fetch(dbstring + \"/posts\").then(res => res.json()).then(data => {\n      setPosts(data.posts.reverse());\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reactWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/newpost/`,\n        children: \"New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(p => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/editpost/${p.id}`,\n              children: p.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: () => {\n          localStorage.removeItem(\"token\");\n          history.push(\"/posts\");\n        },\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminHome, \"fG9U85s7nxOtGykx02DSwqnl7x4=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminHome;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminHome\");","map":{"version":3,"sources":["/Users/barnabynapier/Documents/programming/personal-site/src/pages/AdminHome.js"],"names":["React","useHistory","Link","CustomNavbar","dbstring","CKEditor","ClassicEditor","require","config","AdminHome","history","token","localStorage","getItem","posts","setPosts","useState","currentAdmin","setCurrentAdmin","useEffect","fetch","headers","Authorization","then","res","json","u","push","data","reverse","map","p","id","title","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,yBAAP,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;;;AAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAMU,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACgB,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkClB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAxC;AAEAhB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB;AACA,QAAIR,KAAJ,EAAW;AACTS,MAAAA,KAAK,CAAChB,QAAQ,GAAG,oBAAZ,EAAkC;AACrCiB,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAG,UAASX,KAAM;AAAjC;AAD4B,OAAlC,CAAL,CAGGY,IAHH,CAGSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAHjB,EAIGF,IAJH,CAISG,CAAD,IAAO;AACXR,QAAAA,eAAe,CAACQ,CAAC,CAAC,MAAD,CAAF,CAAf;AACD,OANH;AAOD,KARD,CASA;AATA,SAUK;AACHhB,MAAAA,OAAO,CAACiB,IAAR,CAAa,cAAb;AACD;AACF,GAfD,EAeG,CAAChB,KAAD,CAfH,EAPkC,CAwBlC;;AACAX,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpBC,IAAAA,KAAK,CAAChB,QAAQ,GAAG,QAAZ,CAAL,CACGmB,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESK,IAAD,IAAU;AACdb,MAAAA,QAAQ,CAACa,IAAI,CAACd,KAAL,CAAWe,OAAX,EAAD,CAAR;AACD,KAJH;AAKD,GAND,EAMG,EANH;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBACGf,KAAK,CAACgB,GAAN,CAAWC,CAAD,IAAO;AAChB,8BACE;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,aAAYA,CAAC,CAACC,EAAG,EAA5B;AAAA,wBAAgCD,CAAC,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE;AACE,QAAA,SAAS,EAAC,eADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACbrB,UAAAA,YAAY,CAACsB,UAAb,CAAwB,OAAxB;AACAxB,UAAAA,OAAO,CAACiB,IAAR,CAAa,QAAb;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA3DuBlB,S;UACNR,U;;;KADMQ,S","sourcesContent":["import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport dbstring from \"../constants.js\";\nimport \"../styles/AdminHome.css\";\n\n// CKEditor imports\nimport CKEditor from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\n\nrequire(\"dotenv\").config();\n\nexport default function AdminHome() {\n  const history = useHistory();\n  const token = localStorage.getItem(\"token\");\n\n  const [posts, setPosts] = React.useState([]);\n  const [currentAdmin, setCurrentAdmin] = React.useState(\"\");\n\n  React.useEffect(() => {\n    // If logged in: Get username\n    if (token) {\n      fetch(dbstring + \"/get-current-admin\", {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n        .then((res) => res.json())\n        .then((u) => {\n          setCurrentAdmin(u[\"name\"]);\n        });\n    }\n    //  If not logged in, redirect to login page\n    else {\n      history.push(\"/admin-login\");\n    }\n  }, [token]);\n\n  // Get all posts\n  React.useEffect(() => {\n    fetch(dbstring + \"/posts\")\n      .then((res) => res.json())\n      .then((data) => {\n        setPosts(data.posts.reverse());\n      });\n  }, []);\n\n  return (\n    <div className=\"reactWrapper\">\n      <CustomNavbar />\n      <div className=\"content\">\n        <Link to={`/newpost/`}>New Post</Link>\n        <ul>\n          {posts.map((p) => {\n            return (\n              <li>\n                <Link to={`/editpost/${p.id}`}>{p.title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n        <button\n          className=\"logout-button\"\n          onClick={() => {\n            localStorage.removeItem(\"token\");\n            history.push(\"/posts\");\n          }}\n        >\n          Log out\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}