{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/programming/personal-site/src/pages/PostPage.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Markdown from \"react-markdown\";\nimport postlist from \"../posts.json\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostPage = props => {\n  console.log(props.params);\n  const validId = parseInt(props.match.params.id);\n  console.log(validId);\n\n  if (!validId) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  const fetchedPost = {};\n  let postExists = false;\n  postlist.forEach((post, i) => {\n    if (validId === post.id) {\n      fetchedPost.title = post.title ? post.title : \"No title given\";\n      fetchedPost.date = post.date ? post.date : \"No date given\";\n      fetchedPost.author = post.author ? post.author : \"No author given\";\n      fetchedPost.content = post.content ? post.content : \"No content given\";\n      postExists = true;\n    }\n  });\n\n  if (postExists === false) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: fetchedPost.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: [\"Published on \", fetchedPost.date, \" by \", fetchedPost.author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n      source: fetchedPost.content,\n      escapeHtml: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/Users/barnabynapier/Documents/programming/personal-site/src/pages/PostPage.js"],"names":["React","Navigate","Markdown","postlist","CustomNavbar","PostPage","props","console","log","params","validId","parseInt","match","id","fetchedPost","postExists","forEach","post","i","title","date","author","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,QAAMC,OAAO,GAAGC,QAAQ,CAACL,KAAK,CAACM,KAAN,CAAYH,MAAZ,CAAmBI,EAApB,CAAxB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMI,WAAW,GAAG,EAApB;AACA,MAAIC,UAAU,GAAG,KAAjB;AACAZ,EAAAA,QAAQ,CAACa,OAAT,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,QAAIR,OAAO,KAAKO,IAAI,CAACJ,EAArB,EAAyB;AACvBC,MAAAA,WAAW,CAACK,KAAZ,GAAoBF,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACE,KAAlB,GAA0B,gBAA9C;AACAL,MAAAA,WAAW,CAACM,IAAZ,GAAmBH,IAAI,CAACG,IAAL,GAAYH,IAAI,CAACG,IAAjB,GAAwB,eAA3C;AACAN,MAAAA,WAAW,CAACO,MAAZ,GAAqBJ,IAAI,CAACI,MAAL,GAAcJ,IAAI,CAACI,MAAnB,GAA4B,iBAAjD;AACAP,MAAAA,WAAW,CAACQ,OAAZ,GAAsBL,IAAI,CAACK,OAAL,GAAeL,IAAI,CAACK,OAApB,GAA8B,kBAApD;AACAP,MAAAA,UAAU,GAAG,IAAb;AACD;AACF,GARD;;AASA,MAAIA,UAAU,KAAK,KAAnB,EAA0B;AACxB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKD,WAAW,CAACK;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,kCACgBL,WAAW,CAACM,IAD5B,UACsCN,WAAW,CAACO,MADlD;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEP,WAAW,CAACQ,OAA9B;AAAuC,MAAA,UAAU,EAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAhCD;;KAAMjB,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport Markdown from \"react-markdown\";\nimport postlist from \"../posts.json\";\nimport CustomNavbar from \"../components/CustomNavbar\";\n\nconst PostPage = (props) => {\n  console.log(props.params);\n  const validId = parseInt(props.match.params.id);\n  console.log(validId);\n  if (!validId) {\n    return <Navigate to=\"/404\" />;\n  }\n  const fetchedPost = {};\n  let postExists = false;\n  postlist.forEach((post, i) => {\n    if (validId === post.id) {\n      fetchedPost.title = post.title ? post.title : \"No title given\";\n      fetchedPost.date = post.date ? post.date : \"No date given\";\n      fetchedPost.author = post.author ? post.author : \"No author given\";\n      fetchedPost.content = post.content ? post.content : \"No content given\";\n      postExists = true;\n    }\n  });\n  if (postExists === false) {\n    return <Navigate to=\"/404\" />;\n  }\n  return (\n    <div className=\"post\">\n      <CustomNavbar />\n      <h2>{fetchedPost.title}</h2>\n      <small>\n        Published on {fetchedPost.date} by {fetchedPost.author}\n      </small>\n      <hr />\n      <Markdown source={fetchedPost.content} escapeHtml={false} />\n    </div>\n  );\n};\n\nexport default PostPage;\n"]},"metadata":{},"sourceType":"module"}