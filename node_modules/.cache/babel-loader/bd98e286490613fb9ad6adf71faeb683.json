{"ast":null,"code":"var _jsxFileName = \"/Users/barnabynapier/Documents/programming/personal-site/src/pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport dbstring from \"../constants.js\";\nimport \"../styles/HomePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire(\"dotenv\").config();\n\nexport default function Home() {\n  _s();\n\n  const history = useHistory();\n  const [posts, setPosts] = React.useState([]);\n  const [tag, setTag] = React.useState(\"All\");\n  const [tags, setTags] = React.useState([]);\n  React.useEffect(() => {\n    fetch(dbstring + \"/posts\").then(res => res.json()).then(data => {\n      setPosts(data.posts.reverse());\n    });\n  }, []);\n  React.useEffect(() => {\n    fetch(dbstring + \"/tags\").then(res => res.json()).then(data => data.alltags).then(data => {\n      data.splice(0, 0, \"All\");\n      return data;\n    }).then(data => {\n      setTags(data);\n      console.log(data);\n    });\n  }, []);\n\n  if (posts === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: \"Loading post...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reactWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(CustomNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"div-tagbar\",\n        children: tags.map(t => /*#__PURE__*/_jsxDEV(Link, {\n          className: \"tagbutton\",\n          onClick: () => setTag(t),\n          style: {\n            // borderColor: tag === t ? \"black\" : \"\",\n            borderBottomColor: tag === t ? \"black\" : \"transparent\"\n          },\n          children: t\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), posts.filter(p => {\n        if (tag === \"All\") {\n          return p;\n        } else {\n          return p.tags.includes(tag);\n        }\n      }).map(p => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"div-postwrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"post-title\",\n            children: p.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-date\",\n              children: [p.date, \"\\xA0 \\xB7 \\xA0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-tags\",\n              children: p.tags.join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: p.content\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"Gc3DyRNH9f1D3fbtJxaJXIyfi6A=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/barnabynapier/Documents/programming/personal-site/src/pages/Home.js"],"names":["React","useHistory","Link","CustomNavbar","dbstring","require","config","Home","history","posts","setPosts","useState","tag","setTag","tags","setTags","useEffect","fetch","then","res","json","data","reverse","alltags","splice","console","log","map","t","borderBottomColor","filter","p","includes","title","date","join","__html","content"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport CustomNavbar from \"../components/CustomNavbar\";\nimport dbstring from \"../constants.js\";\nimport \"../styles/HomePage.css\";\nrequire(\"dotenv\").config();\n\nexport default function Home() {\n  const history = useHistory();\n\n  const [posts, setPosts] = React.useState([]);\n  const [tag, setTag] = React.useState(\"All\");\n  const [tags, setTags] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(dbstring + \"/posts\")\n      .then((res) => res.json())\n      .then((data) => {\n        setPosts(data.posts.reverse());\n      });\n  }, []);\n\n  React.useEffect(() => {\n    fetch(dbstring + \"/tags\")\n      .then((res) => res.json())\n      .then((data) => data.alltags)\n      .then((data) => {\n        data.splice(0, 0, \"All\");\n        return data;\n      })\n      .then((data) => {\n        setTags(data);\n        console.log(data);\n      });\n  }, []);\n\n  if (posts === null) {\n    return (\n      <div>\n        <CustomNavbar />\n        <div className=\"main\">Loading post...</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"reactWrapper\">\n      <CustomNavbar />\n      <div className=\"content\">\n        <div className=\"div-tagbar\">\n          {tags.map((t) => (\n            <Link\n              className=\"tagbutton\"\n              onClick={() => setTag(t)}\n              style={{\n                // borderColor: tag === t ? \"black\" : \"\",\n                borderBottomColor: tag === t ? \"black\" : \"transparent\",\n              }}\n            >\n              {t}\n            </Link>\n          ))}\n        </div>\n        {posts\n          .filter((p) => {\n            if (tag === \"All\") {\n              return p;\n            } else {\n              return p.tags.includes(tag);\n            }\n          })\n          .map((p) => {\n            return (\n              <div className=\"div-postwrapper\">\n                <span className=\"post-title\">{p.title}</span>\n                <div className=\"post-info\">\n                  <span className=\"post-date\">\n                    {p.date}&nbsp; &middot; &nbsp;\n                  </span>\n                  <span className=\"post-tags\">{p.tags.join(\", \")}</span>\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: p.content }} />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}